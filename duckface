  (function(){
    var a, b, c, j, m, t, v, L, M, N = 4, O, P, Q;

    if(!(s_c_il && (a = s_c_il[0]))) return;
    a.un = "duckface";
    function b(){
      return ["t"].concat(a.lightProfileID ? a.va_m : a.va_t);
    };
    function c(d){
      var e, f, g, h, i;
      e = {
        "browserHeight"                : "bh",      "browserWidth"      : "bw",   "campaign"              : "v0",   "channel"                : "ch",
        "colorDepth"                   : "c",       "connectionType"    : "ct",   "cookieDomainPeriods"   : "cdp",  "cookieLifetime"         : "cl",
        "cookiesEnabled"               : "k",       "currencyCode"      : "cc",   "deleteLightProfiles"   : "mtsd", "dynamicVariablePrefix"  : "D",
        "javaEnabled"                  : "v",       "javascriptVersion" : "j",    "lightIncrementBy"      : "mti",  "lightProfileID"         : "mtp",
        "lightStoreForSeconds"         : "mtss",    "homepage"          : "hp",   "pageURL"               : "g",    "pageURLRest"            : "-g",
        "plugins"                      : "p",       "resolution"        : "s",    "retrieveLightProfiles" : "mtsr", "timestamp"              : "ts",
        "transactionID"                : "xact",    "vmk"               : "vmt",  "visitorMigrationKey"   : "vmt",  "visitorMigrationServer" : "vmf",
        "visitorMigrationServerSecure" : "vmf",     "visitorNamespace"  : "ns",   "variableProvider"      : "vvp",  "visitorID"              : "vid",
        "lnk_d"                        : "download", "lnk_e"            : "exit", "lnk_o"                 : "other"
      };
      for(f in e) e[e[f]] = f;
      g = {
        "eVar" : {"max" : 75, "short" : "v"},
        "hier" : {"max" : 5,  "short" : "h"},
        "list" : {"max" : 3,  "short" : "l"},
        "prop" : {"max" : 75, "short" : "c"}
      };
      for(h in g) for(i=1; i<g[h].max; i++){
        e[[h, i].join("")]          = [g[h].short, i].join("");
        e[[g[h].short, i].join("")] = [h, i].join("");
      };
      return e[d] || d;
    };
    function j(k, l){
      var l = k.match(/(\d{1,2})\/(\d{1,2})\/(\d{4})\s(\d{1,2}):(\d{1,2}):(\d{1,2})/);
      return l=="friendly" ? Date.UTC(
        +l[3],   l[2]-1,     +l[1],
        +l[4],  +l[5],       +l[6]
      ) : [
        [l[1], (+l[2]+1+""),  l[3]].join("/"),
        [l[4],   l[5],        l[6]].join(":"),
        "GMT"
      ].join(" ");
    };
    function m(n){
      var o, p, q, r, s, t, u, v;
      o = n.match(/(?:&c\.&)(.*)(?:&\.c&)/);
      p = o ? n.replace(o[0], "&") : n;
      q = n.match(/\/b\/ss\/([a-zA-Z0-9]*)\/([\d.]*)\/([a-zA-Z0-9-.]*)\/(s\d*)\?/);
      if(!q) return {src : n};
      r = {
        metaData      : {
          src              : n,
          rsid             : q[1],
          mobile           : q[2],
          version          : q[3],
          cacheBuster      : q[4],
          length           : n.length,
          isTooLong        : n.length > 2083
        },
        reportingData : {
          linkTrackVars2   : [],
          linkTrackEvents2 : "None"
        }
      };
      s = b();
      if(o){
        r.reportingData.contextData = {};
        o[1].split("&").map(function(t){
          s.push(t.split("=")[0]);
        });
      };
      s.map(function(u){
        var w;
        v = p.match(new RegExp(["\\/b\\/ss\\/.*&", c(u), "=([^&]*)"].join("")));
        if(o) w = o[1].match(new RegExp([u, "=([^&?]*)"].join("")));
        if(v) r.reportingData[u] = c(unescape(v[1]));
        if(w) r.reportingData.contextData[u] = unescape(w[1]);
        if(/&pe(v2)?=/.test(p) && /^eVar\d{1,2}|hier\d|list\d|prop\d{1,2}|events$/.test(u)){
          if(v) r.reportingData.linkTrackVars2.push(u);
          if(w) r.reportingData.linkTrackVars2.push(["contextData", u].join("."));
          if(u=="events") linkTrackEvents2 = u;
        };
      });
      r.metaData.timestamp            = j(r.reportingData.t, "friendly");
      r.reportingData.t               = j(r.reportingData.t);
      r.reportingData.linkTrackVars   = r.reportingData.linkTrackVars   || r.reportingData.linkTrackVars2.join(",");
      r.reportingData.linkTrackVars   = r.reportingData.linkTrackVars
                                         .replace("contextData.testCaseKey", "")
                                         .replace(/,{2,}/g, ",")
                                         .replace(/^,/g, "")
                                         .replace(/,$/g, "");
      r.reportingData.linkTrackEvents = r.reportingData.linkTrackEvents || r.reportingData.linkTrackEvents2;
      delete r.reportingData.linkTrackVars2;
      delete r.reportingData.linkTrackEvents2;
      if(!/&pe(v2)?=/.test(p)){
        delete r.reportingData.linkTrackVars;
        delete r.reportingData.linkTrackEvents;
      };
      return r;
    };
    function t(u){
      u.element.addEventListener(u.event, function(){
        event.preventDefault();
        event.stopPropagation();
        event.stopImmediatePropagation();
      });
      u.element.dispatchEvent(new MouseEvent(
        u.event, {
          bubbles    : !0,
          cancelable : !0
        }
      ));
    };
    function v(){
      var w, z, A, B, C, D, E, F, G, H, I, J, K;
      if((w = function(){
        var x = "", y;
        for(y in window) if(/^s_i_/.test(y)) x = m(window[y].src);
        return x;
      })()=="") return;
      z = {
        page : w()
      };
      A = document.body.querySelectorAll("*");
      if(!A || A.length==0) return z;
      z.interactions = [];
      B = {};
      ["blur", "change", "click"].map(function(C){
        var D;
        for(D=0; D<A.length; D++){
          t(B[a.rc[a.visitorNamespace]] = {
            element : A[D],
            event   : C
          });
          a.rc[a.visitorNamespace]++;
        };
      });
      for(E in window) if(/^s_i_/.test(E)){
        F = +(E.match(new RegExp([
          "^s_i_(?:\\d+_)?",
          a.visitorNamespace,
          "(?:_(\\d+))"
        ].join("")))||[,""])[1];
        G = window[E].src;
        H = {};
        if(/&(pe|pev1|pev2)=/.test(G)){
          H                       = m(G);
          H.metaData.element      = B[F].element;
          H.metaData.event        = B[F].event;
          H.metaData.id           = E;
          H.reportingData.rsid    = z.page.metaData.rsid;
          z.interactions.push(H);
        }else{
          z.page.metaData.element = document.body;
          z.page.metaData.id      = E;
        };
      };
      I = document.body.dataset;
      I.duckface            = "";
      I.duckfaceRequestId   = z.page.metaData.id;
      z.interactions.map(function(J){
        K = J.metaData.element.dataset;
        K.duckface          = "";
        K.duckfaceRequestId = J.metaData.id;
        K.duckfaceEvent     = J.metaData.event;
      });
      if(L.constructor===HTMLAudioElement){
        L.loop = !1;
        L.src  = "http://www.albangerome.com/sounds/birds-duck.mp3";
        M = setInterval(function(){
          if(N==0){
            clearInterval(M);
          }else{
            N--;
            L.play();
          };
        }, 500);
      };
      function O(P){
        var Q;
        z.interactions.map(function(R){
          Q = R.metaData.id==P ? R : Q; 
        });
        return Q;
      };
      function S(T, U){
        console.log(T);
        var V, W = {};
        for(V in U) W[V] = {value : U[V]};
        console.table(W);
      };
      document.addEventListener("contextmenu", function(X){
        var Y, Z, V, W, Y = {};
        if(JSON.stringify(X.target.dataset)=="{}") return;
        Y = X.target.dataset.duckfaceRequestId;
        if(X.shiftKey){
          Z = O(Y);
          S("Meta data",      Z.metaData);
          S("Reporting data", Z.reportingData);
        };
        if(X.ctrlKey){
          console.log(Y, window[Y].src);
        };
      });
    };

    if(arguments.length==0){
      if(window.Audio){
        L      = new Audio("http://www.albangerome.com/sounds/birds-bird-mallard-duck-4.mp3");
        L.loop = !0;
        (function(){
          return L.play();
        })()
        .then(function(){})
        .catch(function(){})
        .then(function(){
          v();
        });
      }else{
        v();
      };
    }else{
      aa = arguments;
      bb = [];
      if(aa.length==1){
        if(aa[0].constructor===String) cc = [aa[0]];
        if(aa[0].constructor===Array)  cc =  aa[0];
        cc.map(function(dd){
          var ee = m(dd);
              ee.metaData.isInteraction   = /&(pe|pev1|pev2)=/.test(dd);
              ee.metaData.isPageView      = !ee.metaData.isInteraction;
          bb.push(ee);
        });
      };

      return bb.length==1 ? bb[0] : bb;
    };
  })();
